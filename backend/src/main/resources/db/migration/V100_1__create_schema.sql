DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS companies CASCADE;
DROP TABLE IF EXISTS company_notes CASCADE;
DROP TABLE IF EXISTS contacts CASCADE;
DROP TABLE IF EXISTS deals CASCADE;
DROP TABLE IF EXISTS tasks CASCADE;
DROP TABLE IF EXISTS task_participants CASCADE;
DROP TABLE IF EXISTS check_list_items CASCADE;
DROP TABLE IF EXISTS events CASCADE;
DROP TABLE IF EXISTS event_categories CASCADE;
DROP TABLE IF EXISTS event_participants CASCADE;
DROP TABLE IF EXISTS quotes CASCADE;
DROP TABLE IF EXISTS quote_items CASCADE;
DROP TABLE IF EXISTS audits CASCADE;

CREATE TABLE users (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name            VARCHAR(50) NOT NULL,
    email           VARCHAR(50) NOT NULL,
    phone           VARCHAR(50) NOT NULL,
    job_title       VARCHAR(255),
    timezone        VARCHAR(255) NOT NULL,
    avatar_url      VARCHAR(255),
    password_hash   VARCHAR(255) NOT NULL,
    role            VARCHAR(50) NOT NULL,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);
CREATE UNIQUE INDEX idx_user_email ON users (email);

CREATE TABLE companies (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name            VARCHAR(64) NOT NULL,
    avatar_url      VARCHAR(100),
    total_revenue   DECIMAL(10, 2),
    industry        VARCHAR(100),
    company_size    VARCHAR(10),
    business_type   VARCHAR(10),
    website         VARCHAR(255),
    country         VARCHAR(100),
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);
COMMENT ON COLUMN companies.company_size IS 'SMALL, MEDIUM, LARGE, ENTERPRISE';
COMMENT ON COLUMN companies.business_type IS 'B2B, B2C, B2G';

CREATE TABLE company_notes (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    note            TEXT,
    company_id      INTEGER,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE contacts (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    name            VARCHAR(100) NOT NULL,
    email           VARCHAR(255) NOT NULL,
    phone           VARCHAR(50),
    job_title       VARCHAR(255),
    timezone        VARCHAR(255),
    avatar_url      VARCHAR(255),
    stage           VARCHAR(50),
    status          VARCHAR(50),
    score           INTEGER,
    company_id      INTEGER,
    sales_owner     INTEGER,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);
COMMENT ON COLUMN contacts.stage IS 'LEAD, SALES_QUALIFIED_LEAD, CUSTOMER';
COMMENT ON COLUMN contacts.status IS 'NEW, CONTACTED, INTERESTED, UNQUALIFIED, QUALIFIED, NEGOTIATION, LOST, WON, CHURNED';
CREATE UNIQUE INDEX idx_contact_email ON contacts (email);

CREATE TABLE deals (
    id               INTEGER GENERATED BY DEFAULT AS IDENTITY,
    title            VARCHAR(255) NOT NULL,
    value            DECIMAL(10, 2),
    notes            TEXT,
    stage            VARCHAR(50),
    close_date_year  INTEGER,
    close_date_month INTEGER,
    close_date_day   INTEGER,
    deal_onwer_id    INTEGER,
    company_id       INTEGER,
    deal_contact_id  INTEGER,
    created_at       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at       TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by       INTEGER,
    updated_by       INTEGER,
    PRIMARY KEY (id)
);
COMMENT ON COLUMN deals.stage IS 'LEAD, SALES_QUALIFIED_LEAD, CUSTOMER';

CREATE TABLE tasks (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    title           VARCHAR(255) NOT NULL,
    description     TEXT,
    due_date        DATE,
    completed       BOOLEAN DEFAULT FALSE,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE task_participants (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    task_id         INTEGER,
    participant_id  INTEGER,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);


CREATE TABLE check_list_items (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    task_id         INTEGER,
    title           TEXT NOT NULL,
    checked         BOOLEAN DEFAULT FALSE,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE events (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    title           VARCHAR(255) NOT NULL,
    description     TEXT,
    start_date      TIMESTAMP,
    end_date        TIMESTAMP,
    color           VARCHAR(255),
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    category_id     INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE event_categories (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    title           VARCHAR(255) NOT NULL,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE event_participants (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    event_id        INTEGER,
    participant_id  INTEGER,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE quotes (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    title           VARCHAR(255) NOT NULL,
    description     TEXT,
    status          VARCHAR(50),
    subtotal        DECIMAL(10, 2),
    tax             INTEGER,
    total           DECIMAL(10, 2),
    contact_id      INTEGER,
    company_id      INTEGER,
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);
COMMENT ON COLUMN quotes.status IS 'DRAFT, SENT, ACCEPTED';

CREATE TABLE quote_items (
    id              INTEGER GENERATED BY DEFAULT AS IDENTITY,
    quote_id        INTEGER,
    title           VARCHAR(255) NOT NULL,
    unit_price      DECIMAL(10,2),
    quantity        INTEGER,
    discount        INTEGER,
    total_price     DECIMAL(10,2),
    created_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at      TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by      INTEGER,
    updated_by      INTEGER,
    PRIMARY KEY (id)
);

CREATE TABLE audits (
    id             INTEGER GENERATED BY DEFAULT AS IDENTITY,
    target_id      INTEGER,
    target_entity  TEXT,
    action         TEXT NOT NULL,
    user_id        INTEGER,
    changes        JSONB,
    created_at     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at     TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    created_by     INTEGER,
    updated_by     INTEGER,
    PRIMARY KEY(id)
);
